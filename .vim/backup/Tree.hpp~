#ifndef TREE_HPP
# define TREE_HPP

# include "StaticObject.hpp"
# include <vector>
# include <cmath>

# define DEPTH 8
# define SIZE_SCREEN_Y 16 * 128

# define MIN_X 10
# define MAX_X 140
# define MIN_Y 10
# define MAX_Y 120
# define MIN_A 15
# define MAX_A 75

class Tree : public StaticObject
{
private:
	std::vector<float>				m_refAngle;
	sf::Color						m_leafColor;

	int								mn_maxRectangle;
	int								mn_maxTriangle;
	int								mn_maxLeaf;
	int								mn_countLeaf;
	int								mn_countAngle;

	float							mf_timer;
	float							mf_mouvement;
	bool							mb_growSide;
	bool							mb_isLeaf;

public:
	Tree(void);
	virtual ~Tree(void);

	void init(Biome * p_biome);

	void pythagorasTree(sf::Vector2f p_center, sf::Vector2f p_size, float pf_angle = 0.0f, float p_cos = cos(0.0f), float p_sin = sin(0.0f), const int pn_depth = 1);
	void randomTree(void);

	virtual void update(float pf_deltatime);
};

#endif
