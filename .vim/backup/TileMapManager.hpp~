#ifndef TILEMAPMANAGER_HPP
# define TILEMAPMANAGER_HPP

# include "GameObject/Map.hpp"

class MapManager : public sf::Drawable
{
public:
	MapManager(void);
	virtual ~MapManager(void);

	// Transition
	void clearTransition(void);
	void defineTransition(void);
	void defineTransitionRange(int p_startX, int p_endX, int p_startY, int p_endY);
	void defineTransition(int x, int y);
	void setTransitionAppear(int x, int y);
	void setTransitionDisappear(int x, int y);
	void setTransitionModify(int x, int y);
	void setTransitionCentered(Map * tiles, int x, int y);

	void update(float pf_deltatime);
	void updateOffset(float pf_deltatime);
	void updateTransition(float pf_deltatime);
	void draw(sf::RenderTarget& render, sf::RenderStates states) const;

private:
	Map		*m_tiles;
	Map		*m_tilesPrev;
	float		mf_transitionTimer;
	float		mf_transitionTimeMax;
	float		mf_offsetX;
	float		mf_offsetY;

	void swapMap(void);
	void lerp(sf::Vector2f & p_result, sf::Vector2f & p_start, sf::Vector2f & p_end, float p_transition);

};

# endif
